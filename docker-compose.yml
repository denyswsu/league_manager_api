version: "3.9"

services:
  nginx:
    container_name: nginx
    restart: always
    build: ./nginx
    ports:
      - "1337:80"
    volumes:
      - static_volume:/usr/src/app/staticfiles/
      - media_volume:/usr/src/app/media/
    depends_on:
      - wsgiserver
      - asgiserver

  db:
    container_name: db
    image: postgres:15.3-bullseye
    env_file:
      - ./env_files/.env.dev
    volumes:
      - ./dev_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 3s
      timeout: 30s
      retries: 3
    expose:
      - "5432"
    ports:
      - "5432:5432"

  wsgiserver:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wsgiserver
    entrypoint: ["bash", "/usr/src/backend/entrypoint-wsgi.sh"]
#    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - ./env_files/.env.dev
    volumes:
      - ./backend:/usr/src/backend
      - static_volume:/usr/src/app/staticfiles/
      - media_volume:/usr/src/app/media/
    links:
      - db
      - redis
    expose:
      - 8000

  asgiserver:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: asgiserver
    entrypoint: ["bash", "/usr/src/backend/entrypoint-asgi.sh"]
#    command: daphne config.asgi:application -b 0.0.0.0 -p 9000
    env_file:
      - ./env_files/.env.dev
    volumes:
      - ./backend:/usr/src/backend
    links:
      - db
      - redis
    expose:
      - 9000

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: unless-stopped


volumes:
  static_volume:
  media_volume:
  dev_db_data:
